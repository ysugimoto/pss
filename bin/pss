#!/usr/bin/env php
<?php

define('PSS_START_TIME', microtime());
define('PSS_DIR', realpath(__DIR__ . '/../'));
define('PSS_CLASS_PREFIX', 'Pss_');
define('PSS_VERSION', '0.8');

// Register autoload plugin classes
spl_autoload_register(function($name) {
	
	$file = strtolower(str_replace(PSS_CLASS_PREFIX, '', $name));
	
	if ( file_exists(PSS_DIR . '/' . $file . '.php') ) {
		require_once(PSS_DIR . '/' . $file . '.php');
		return;
	}
	
	if ( file_exists(PSS_DIR . '/plugins/' . $file . '.php') ) {
		require_once(PSS_DIR . '/plugins/' . $file . '.php');
	} else if ( file_exists(PSS_DIR . '/controls/' . $file . '.php') ) {
		require_once(PSS_DIR . '/controls/' . $file . '.php');
	}
});


// Main process
$args   = array_slice($_SERVER['argv'], 1);
$input  = null;
$output = null;

foreach ( $args as $arg ) {
	if ( strpos($arg, '--') === 0 ) {
		list($key, $value) = explode('=', trim($arg, '-'));
		Pss::addVariable($key, $value);
		continue;
	} else if ( strpos($arg, '-') === 0 ) {
		Pss::addOption(substr(trim($arg, '-'), 0, 1), substr(trim($arg, '-'), 1));
		continue;
	}
	if ( ! $input ) {
		$input = $arg;
	} else if ( ! $output ) {
		$output = $arg;
	}
}

if ( ! $input ) {
	// Show usage
	echo PHP_EOL;
	echo '====================================' . PHP_EOL;
	echo 'PSS: PHP-CSS-Preprocessor ver ' . PSS_VERSION . PHP_EOL;
	echo '====================================' . PHP_EOL;
	echo PHP_EOL;
	echo 'Usage: pss input_file [output_file] [-mdlv] [--extraargs]' . PHP_EOL;
	echo PHP_EOL;
	exit;
}

if ( ! file_exists($input) ) {
	echo 'Input file: ' . $input . ' is not exists.' . PHP_EOL;
	exit;
}

try {
	$compiled = Pss::compile($input);
} catch ( RuntimeException $e ) {
	echo $e->getMessage() . PHP_EOL;
	exit;
}

if ( ! $output ) {
	echo $compiled; 
} else {
	file_put_contents($output, $compiled);
	echo 'Compilation succeed!' . PHP_EOL;
}
if ( ! is_null(Pss::getOption('v')) ) {
	echo '/* ========================================' . PHP_EOL;
	echo 'Compiled from: ' . $input . (( $output ) ? ' to ' . $output : '') . PHP_EOL;
	echo 'Compiled size: ' . number_format(strlen($compiled)) . '(byte)' . PHP_EOL;
	echo 'Defined Selectors count: ' . number_format(Pss::$selectorCount) . PHP_EOL;
	echo PHP_EOL;
	echo 'System memory: ' . number_format(memory_get_usage()) . '(byte) used' . PHP_EOL;
		
	list($stm, $sts) = explode(' ', PSS_START_TIME);
	list($edm, $eds) = explode(' ', microtime());
		
	echo 'Process time: ' . number_format(($edm + $eds) - ($stm + $sts), 4) . '(msec)' . PHP_EOL;
	echo '======================================== */' . PHP_EOL;
}
